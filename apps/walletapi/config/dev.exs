use Mix.Config

port =
  case System.get_env("WALLETAPI_PORT") && Integer.parse(System.get_env("WALLETAPI_PORT")) do
    {port, _} -> port
    :error -> nil
    nil -> nil
  end

config :walletapi, WalletApi.Endpoint,
  http: [port: port || 4002],
  url: [
    scheme: "http",
    host: System.get_env("BLOCKSCOUT_HOST") || "localhost",
    path: System.get_env("NETWORK_PATH") || "/"
  ],
  https: [
    port: (port && port + 1) || 4002,
    cipher_suite: :strong,
    certfile: System.get_env("CERTFILE") || "priv/cert/selfsigned.pem",
    keyfile: System.get_env("KEYFILE") || "priv/cert/selfsigned_key.pem"
  ],
  secret_key_base: System.get_env("SECRET_KEY_BASE"),
  debug_errors: true,
  code_reloader: true,
  check_origin: false,
  watchers: []

config :walletapi,
  firebase_database_url: "https://celo-mobile-alfajores.firebaseio.com/",
  verification_rewards_address: "0xb4fdaf5f3cd313654aa357299ada901b1d2dd3b5",
  get_transaction: WalletAPI.Resolver.TransactionResolver.GetTransaction,
  gold_exchange_rate_behaviour: WalletApi.CurrencyConversion.GoldExchangeRateAPI,
  exchange_rate_behaviour: WalletApi.CurrencyConversion.ExchangeRateAPI

config :ethereumex,
  url: "https://alfajores-forno.celo-testnet.org"

# ## SSL Support
#
# In order to use HTTPS in development, a self-signed
# certificate can be generated by running the following
# Mix task:
#
#     mix phx.gen.cert
#
# Note that this task requires Erlang/OTP 20 or later.
# Run `mix help phx.gen.cert` for more information.
#
# The `http:` config above can be replaced with:
#
#     https: [
#       port: 4001,
#       cipher_suite: :strong,
#       keyfile: "priv/cert/selfsigned_key.pem",
#       certfile: "priv/cert/selfsigned.pem"
#     ],
#
# If desired, both `http:` and `https:` keys can be
# configured to run both http and https servers on
# different ports.

# Do not include metadata nor timestamps in development logs
config :logger, :walletapi, format: "[$level] $message\n"

# Set a higher stacktrace during development. Avoid configuring such
# in production as building large stacktraces may be expensive.
config :phoenix, :stacktrace_depth, 20

# Initialize plugs at runtime for faster development compilation
config :phoenix, :plug_init_mode, :runtime
